├── main.py                        # init + load JSON (optional)
├── notebook_utils.py              # sys.path bootstrap for notebooks
├── sample_data.json               # training data (4 users x 1000 sessions)
├── data_loader.py                 # load JSON into SQLite DB
│
├── database/                      # database layer
│   ├── __init__.py                # connect() + init_db()
│   ├── schema.sql                 # SQL schema definitions
│   ├── users.py                   # user table operations
│   ├── sessions.py                # session table operations
│   ├── exercises.py               # exercise table operations
│   └── queries.py                 # SELECT queries for analysis
│
├── analysis/                      # data analysis and EDA
│   ├── __init__.py
│   ├── dataframe_builder.py       # build pandas DataFrame with helper columns
│   ├── feature_engineering.py     # add features: volume, rolling avg, deltas, encodings
│   ├── visualization.py           # plotting functions for progress and correlations
│   ├── stats.py                   # statistical analyses (corr, group stats)
│   ├── user_analysis.ipynb        # EDA for individual user
│   └── cohort_analysis.ipynb      # comparative analysis across users
│
├── models/                        # machine learning models and pipelines
│   ├── __init__.py
│   ├── model_training.py          # functions to train and validate models
│   ├── training_pipeline.py       # end-to-end training pipeline (load->features->train->save)
│   ├── prediction_pipeline.py     # end-to-end prediction pipeline (load->features->predict)
│   ├── muscle_predictor.py        # classes wrapping trained models for each muscle group
│   └── evaluation.py              # evaluation metrics and modeling results visualization
│
├── app/                          # Flask web application
│   ├── __init__.py               # create_app factory
│   ├── routes.py                 # Flask routes and view functions
│   ├── templates/                # Jinja2 HTML templates
│   │   └── user.html             # user dashboard template
│   ├── static/                   # static assets (CSS, JS, images)
│   │   └── style.css             # basic styling
│   └── run.py                    # script to run the Flask server
│
├── outputs/                       # generated outputs
│   ├── plots/                     # saved plot images (PNG, SVG)
│   └── models/                    # saved trained models (joblib or pickle)
│
└── notebooks/                     # Jupyter notebooks for setup and prototyping
    ├── 0_SETUP.ipynb              # initial DB setup and data loading
    └── model_exploration.ipynb    # prototype model training and evaluation
